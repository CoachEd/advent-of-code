s="""#########################################
#.#...#...#.........#.#.......#...#...#.#
#.#.#.#.#.#.###.###.#.#.#.###.#.#.#.#.#.#
#...#...#...#.#.#...#...#...#...#...#.#.#
#.###########.#.#.#########.#########.#.#
#...#.....#...#.#.........#.#.......#...#
###.#.###.###.#.#########.#.#######.###.#
#.....#.#.....#.#.....#...#.#...#.....#.#
#.#####.#.#####.#.###.#.###.#.#.#.#####.#
#.#...#...#.....#.#.#.#.#...#.#.#...#...#
###.#.#####.#####.#.#.#.#.###.#.###.#.###
#...#.#.....#.....#...#.#.#...#...#.....#
#.###.#.#####.#.###.###.#.#.#####.#.#####
#...#.#...#...#.#.....#.#.#.#...#.#.#...#
#.#.#.#.#.#####.#####.#.#.#.###.#.###.#.#
#.#.#.#.#.....#...#...#.#.#.#...#.....#.#
#.#.#.#######.#.#.#.###.#.#.#.#########.#
#.#.#.........#.#.#.#.....#.#.#...#.....#
###.###########.#.###.#####.#.#.#.#.#####
#...#...........#.....#...#.#...#.#.....#
#.#####################.#.#.#.###.#####.#
#.......#.......#...#...#...#.#.#.....#.#
#.#####.#.#####.#.#.#########.#.#####.#.#
#...#...#.....#...#.......#...#.....#...#
###.#.#.#####.###########.#.#######.#####
#...#.#.#.....#.......#...#.#.......#...#
#.###.#.#.#####.#####.#.###.#.#####.#.#.#
#.#...#.#...#.#.....#.#.#...#.....#...#.#
###.###.###.#.#.###.#.#.#.###.###.#.##.##
#...#...#.#.#.#...#.#.#...#.....#.#.#...#
#.###.###.#.#.###.#.###########.#.###.#.#
#.#.#.#...#.#.#...#...........#.#.....#.#
#.#.#.#.#.#.#.#.#####.#####.#.###.#####.#
#.#.#...#.#.#...#...#...#...#...#.....#.#
#.#.#####.#.#####.#.###.#.#####.###.###.#
#.#.#.....#.#.....#.#...#.#...#.#O..#...#
#.#.#.#####.#.#####.#####.#.#.#.#####.#.#
#.#.....#...#.#.#...#...#...#.#.....#.#.#
#.#######.###.#.#.###.#.#####.#####.#.#.#
#.............#.......#.......#.......#.#
#########################################
"""

# y,x 28,38 could be a wall(#)
# y,x: 35,33 is oxygen system 
arr = s.split('\n')[:-1]
board = []
rooms = 0
count_rooms = 0
for r in arr:
    temparr = []
    for c in r:
        if c == '.':
            rooms = rooms + 1
        temparr.append(c)
    board.append(temparr)

def validMove(y,x):
    if y < 0 or x < 0 or y >= len(board) or x >= len(board[0]):
        return False
    else:
        return True

t = 0
while True:
    # copy real board
    board2 = []
    for r in board:
        temparr = []
        for c in r:
            temparr.append(c)
        board2.append(temparr)
    
    for y in range(len(board)):
        for x in range(len(board[y])):
            c = board[y][x]
            if c == 'O':
                uy = y-1
                ux = x
                dy = y+1
                dx = x
                ry = y
                rx = x+1
                ly = y
                lx = x-1
                if validMove(uy,ux) and board[uy][ux] == '.':
                    board2[uy][ux] = 'O'
                    count_rooms = count_rooms + 1
                if validMove(dy,dx) and board[dy][dx] == '.':
                    board2[dy][dx] = 'O'
                    count_rooms = count_rooms + 1
                if validMove(ry,rx) and board[ry][rx] == '.':
                    board2[ry][rx] = 'O'
                    count_rooms = count_rooms + 1
                if validMove(ly,lx) and board[ly][lx] == '.':
                    board2[ly][lx] = 'O'
                    count_rooms = count_rooms + 1    

    t = t + 1          
    board = []      
    s = ''
    for r in board2:
        temparr = []
        for c in r:
            temparr.append(c)
            s = s + c
        s = s + '\n'
        board.append(temparr)
    print(s)
    
    if count_rooms == rooms:
        break


print(str(t) + ' minutes.')


    
